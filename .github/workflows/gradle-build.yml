# This workflow will build a Java project with Gradle, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-java-with-gradle

name: Build the Spring Pet Clinic with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
      ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
      IMAGE_NAME: spring-pet-clinic-gradle
      IMAGE_VERSION: 1.0.1
      ARTIFACTORY_HOST: ${{ secrets.ARTIFACTORY_HOST }}
      ARTIFACTORY_CONTAINER_REPO: ${{ secrets.ARTIFACTORY_CONTAINER_REPO }}
    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v4
        with:
          java-version: ${{matrix.java}}
          distribution: 'adopt'
          cache: maven

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        
      - name: Build with Gradle
        run: ./gradlew build
        
      - name: Log in to JFrog Container Registry
        run: |
          echo "${ARTIFACTORY_PASSWORD}" | docker login ${ARTIFACTORY_HOST} \
            --username "${ARTIFACTORY_USER}" --password-stdin

      - name: Build image with Gradle
        run: |
          ./gradlew bootBuildImage \
            --imageName=${ARTIFACTORY_HOST}/${ARTIFACTORY_CONTAINER_REPO}/${IMAGE_NAME}:${IMAGE_VERSION}

      - name: Push image to JFrog
        run: |
          docker push ${ARTIFACTORY_HOST}/${ARTIFACTORY_CONTAINER_REPO}/${IMAGE_NAME}:${IMAGE_VERSION}
